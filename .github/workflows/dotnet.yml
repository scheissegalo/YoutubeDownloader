name: Build and Release

on:
  push:
    branches:
      - master  # Adjust this as necessary, e.g., to tags instead of main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '8.0'  # Specify your .NET version here

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --configuration Release --no-restore

      - name: Publish
        run: dotnet publish --configuration Release --no-restore --output publish/
        
      # Optional: Create a tarball or zip of the output
      - name: Archive production artifacts
        run: tar -cvzf YoutubeDownloader.tar.gz -C publish/ .

      # Assuming you want to create a release whenever this workflow runs,
      # we use actions to create a release and upload the binary.
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      # Upload the compiled binary as a release asset
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./YoutubeDownloader.tar.gz
          asset_name: YoutubeDownloader.tar.gz
          asset_content_type: application/gzip
